-- MySQL Script generated by MySQL Workbench
-- Thu Aug 17 23:42:42 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema lyaHotel
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema lyaHotel
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `lyaHotel` DEFAULT CHARACTER SET utf8 ;
USE `lyaHotel` ;

-- -----------------------------------------------------
-- Table `lyaHotel`.`habitacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lyaHotel`.`habitacion` (
  `idhabitacion` INT NOT NULL AUTO_INCREMENT,
  `numero` VARCHAR(4) NOT NULL,
  `piso` VARCHAR(2) NOT NULL,
  `descripcion` VARCHAR(255) NULL,
  `caracteristicas` VARCHAR(512) NULL,
  `precio_diario` INT NOT NULL,
  `estado` VARCHAR(15) NOT NULL,
  `tipo_habitacion` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`idhabitacion`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lyaHotel`.`producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lyaHotel`.`producto` (
  `idproducto` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(55) NOT NULL,
  `descripcion` VARCHAR(255) NULL,
  `unidad_medida` VARCHAR(20) NOT NULL,
  `precio_venta` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idproducto`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lyaHotel`.`trabajador`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lyaHotel`.`trabajador` (
  `idtrabajador` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(20) NOT NULL,
  `apellido` VARCHAR(20) NOT NULL,
  `sueldo` INT NOT NULL,
  `acceso` VARCHAR(20) NOT NULL,
  `login` VARCHAR(20) NOT NULL,
  `password` VARCHAR(20) NOT NULL,
  `estado` VARCHAR(1) NOT NULL,
  `tipo_documento` VARCHAR(20) NOT NULL,
  `numero_documento` VARCHAR(15) NOT NULL,
  `direccion` VARCHAR(50) NULL,
  `telefono` VARCHAR(15) NOT NULL,
  `correo` VARCHAR(45) NULL,
  PRIMARY KEY (`idtrabajador`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lyaHotel`.`cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lyaHotel`.`cliente` (
  `idcliente` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(20) NOT NULL,
  `apellido` VARCHAR(20) NOT NULL,
  `tipo_documento` VARCHAR(20) NOT NULL,
  `numero_documento` VARCHAR(15) NOT NULL,
  `direccion` VARCHAR(50) NULL,
  `telefono` VARCHAR(15) NOT NULL,
  `correo` VARCHAR(45) NULL,
  PRIMARY KEY (`idcliente`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lyaHotel`.`reserva`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lyaHotel`.`reserva` (
  `idreserva` INT NOT NULL AUTO_INCREMENT,
  `idcliente` INT NOT NULL,
  `idhabitacion` INT NOT NULL,
  `idtrabajador` INT NOT NULL,
  `tipo_reserva` VARCHAR(45) NOT NULL,
  `fecha_reserva` DATE NOT NULL,
  `fecha_ingreso` DATE NOT NULL,
  `fecha_salida` DATE NOT NULL,
  `costo_reserva` INT NOT NULL,
  `observacion` VARCHAR(512) NULL,
  `estado` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`idreserva`, `idcliente`, `idhabitacion`, `idtrabajador`),
  INDEX `fk_reserva_trabajador1_idx` (`idtrabajador` ASC) ,
  INDEX `fk_reserva_cliente1_idx` (`idcliente` ASC) ,
  INDEX `fk_reserva_habitacion1_idx` (`idhabitacion` ASC) ,
  CONSTRAINT `fk_reserva_trabajador1`
    FOREIGN KEY (`idtrabajador`)
    REFERENCES `lyaHotel`.`trabajador` (`idtrabajador`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reserva_cliente1`
    FOREIGN KEY (`idcliente`)
    REFERENCES `lyaHotel`.`cliente` (`idcliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reserva_habitacion1`
    FOREIGN KEY (`idhabitacion`)
    REFERENCES `lyaHotel`.`habitacion` (`idhabitacion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lyaHotel`.`pago`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lyaHotel`.`pago` (
  `idpago` INT NOT NULL AUTO_INCREMENT,
  `idreserva` INT NOT NULL,
  `total_pago` INT NOT NULL,
  `fecha_emision` DATE NOT NULL,
  `fecha_pago` DATE NOT NULL,
  `estado` VARCHAR(20) NOT NULL,
  `iva` INT NOT NULL,
  `numero_comprobante` VARCHAR(15) NOT NULL,
  `tipo_comprobante` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`idpago`, `idreserva`),
  INDEX `fk_pago_reserva1_idx` (`idreserva` ASC) ,
  CONSTRAINT `fk_pago_reserva1`
    FOREIGN KEY (`idreserva`)
    REFERENCES `lyaHotel`.`reserva` (`idreserva`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lyaHotel`.`consumo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lyaHotel`.`consumo` (
  `idconsumo` INT NOT NULL AUTO_INCREMENT,
  `idproducto` INT NOT NULL,
  `idreserva` INT NOT NULL,
  `cantidad` INT NOT NULL,
  `precio_venta` INT NOT NULL,
  `estado` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`idconsumo`, `idproducto`, `idreserva`),
  INDEX `fk_producto_has_reserva_reserva1_idx` (`idreserva` ASC) ,
  INDEX `fk_producto_has_reserva_producto_idx` (`idproducto` ASC) ,
  CONSTRAINT `fk_producto_has_reserva_producto`
    FOREIGN KEY (`idproducto`)
    REFERENCES `lyaHotel`.`producto` (`idproducto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_producto_has_reserva_reserva1`
    FOREIGN KEY (`idreserva`)
    REFERENCES `lyaHotel`.`reserva` (`idreserva`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
